{"ast":null,"code":"var _jsxFileName = \"C:\\\\Atom\\\\MyProjects\\\\csb-module-app\\\\src\\\\Components\\\\sem2List.js\";\nimport React from 'react';\nimport FormGroup from \"@material-ui/core/FormGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport \"./boxSelect.css\";\nimport data from '../Data/CourseData.json';\n\nfunction Sem2List(props) {\n  const toMap1 = props.state.selected.slice(15, 23);\n  const toMap2 = props.state.selected.slice(23, 28);\n\n  const onUpdateItem = i => event => {\n    props.setState({\n      selected: props.state.selected.map(function (val, idx) {\n        if (idx === i) return !val;\n        return val;\n      })\n    });\n    /*\r\n    const newSelected = props.state.selected.slice() //copy the array\r\n    newSelected[i] = event.target.checked //execute the manipulations\r\n    props.setState({selected: newSelected}) //set the new state\r\n    */\n  };\n\n  const checkbox1 = toMap1.map((checked, index) => /*#__PURE__*/React.createElement(FormControlLabel, {\n    className: \"box\" + (index % 2 + 1),\n    control: /*#__PURE__*/React.createElement(Checkbox, {\n      checked: props.state.selected[{\n        index\n      } + 15],\n      onChange: onUpdateItem({\n        index\n      } + 15),\n      name: \"box\" + index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }\n    }),\n    label: data.Courses[index + 15].name,\n    key: index + 15,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }));\n  const checkbox2 = toMap2.map((checked, index) => /*#__PURE__*/React.createElement(FormControlLabel, {\n    className: \"box\" + (index % 2 + 1),\n    control: /*#__PURE__*/React.createElement(Checkbox, {\n      checked: props.state.selected[{\n        index\n      } + 23],\n      onChange: onUpdateItem({\n        index\n      } + 23),\n      name: \"box\" + index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }\n    }),\n    label: data.Courses[index + 23].name,\n    key: index + 23,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }));\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"boxSelectInput\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"boxes\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"boxHeader\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }, \"Business\"), /*#__PURE__*/React.createElement(FormGroup, {\n    className: \"boxesGroup\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, checkbox1)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"boxes\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"boxHeader\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }, \"Computer Science\"), /*#__PURE__*/React.createElement(FormGroup, {\n    className: \"boxesGroup\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }, checkbox2)));\n}\n\nexport default Sem2List;","map":{"version":3,"sources":["C:/Atom/MyProjects/csb-module-app/src/Components/sem2List.js"],"names":["React","FormGroup","FormControlLabel","Checkbox","data","Sem2List","props","toMap1","state","selected","slice","toMap2","onUpdateItem","i","event","setState","map","val","idx","checkbox1","checked","index","Courses","name","checkbox2"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport FormGroup from \"@material-ui/core/FormGroup\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\n\r\n\r\nimport \"./boxSelect.css\";\r\nimport data from '../Data/CourseData.json'\r\n\r\nfunction Sem2List(props) {\r\n\r\n  const toMap1 = props.state.selected.slice(15, 23);\r\n  const toMap2 = props.state.selected.slice(23, 28);\r\n\r\n  const onUpdateItem= (i) => (event) => {\r\n    props.setState(\r\n      {\r\n        selected: props.state.selected.map(function(val, idx)\r\n        {\r\n            if (idx === i) return !val;\r\n            return val;\r\n        })\r\n    });\r\n    /*\r\n    const newSelected = props.state.selected.slice() //copy the array\r\n    newSelected[i] = event.target.checked //execute the manipulations\r\n    props.setState({selected: newSelected}) //set the new state\r\n    */\r\n  };\r\n\r\n  const checkbox1 = toMap1.map((checked, index) => (\r\n      <FormControlLabel className={\"box\" + (index % 2 + 1)}\r\n      control={\r\n        <Checkbox\r\n          checked={props.state.selected[{index}+ 15]}\r\n          onChange={onUpdateItem({index}+ 15)}\r\n          name={\"box\" + index} />\r\n      }\r\n      label= {data.Courses[index+ 15].name}\r\n      key={index + 15}/>\r\n\r\n  ));\r\n\r\n  const checkbox2 = toMap2.map((checked, index) => (\r\n      <FormControlLabel className={\"box\" + (index % 2 + 1)}\r\n      control=\r\n      {\r\n        <Checkbox\r\n          checked={props.state.selected[{index}+23]}\r\n          onChange={onUpdateItem({index}+23)}\r\n          name={\"box\" + index} />\r\n      }\r\n      label= {data.Courses[index+ 23].name}\r\n      key={index + 23}/>\r\n\r\n  ));\r\n\r\n    return (\r\n      <div className=\"boxSelectInput\">\r\n      <div className=\"boxes\">\r\n        <h2 className=\"boxHeader\">Business</h2>\r\n        <FormGroup className=\"boxesGroup\">\r\n          {checkbox1}\r\n        </FormGroup>\r\n      </div>\r\n\r\n      <div className=\"boxes\">\r\n        <h2 className=\"boxHeader\">Computer Science</h2>\r\n        <FormGroup className=\"boxesGroup\">\r\n        {checkbox2}\r\n        </FormGroup>\r\n        </div>\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default Sem2List\r\n"]},"metadata":{},"sourceType":"module"}