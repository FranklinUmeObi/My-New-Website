{"ast":null,"code":"var _jsxFileName = \"C:\\\\Atom\\\\MyProjects\\\\csb-module-app\\\\src\\\\Components\\\\sem1List.js\";\nimport React from 'react';\nimport FormGroup from \"@material-ui/core/FormGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport \"./boxSelect.css\";\nimport data from '../Data/CourseData.json';\n\nfunction Sem1List(props) {\n  const toMap1 = props.state.selected.slice(0, 8);\n  const toMap2 = props.state.selected.slice(8, 15);\n\n  function onUpdateItem(i) {\n    props.setState(state => {\n      const list = state.list.map((item, j) => {\n        if (j == i) {\n          return !item;\n        } else {\n          return item;\n        }\n      });\n      return {\n        list\n      };\n    }); // props.setState(\n    //   {\n    //     selected: props.state.selected.map(function(val, idx)\n    //     {\n    //       if (idx == i) {\n    //         if (val == true)return false\n    //         else return true\n    //       }\n    //       return val;\n    //     })\n    // });\n  }\n\n  ;\n  const checkbox1 = toMap1.map((checked, index) => /*#__PURE__*/React.createElement(FormControlLabel, {\n    className: \"box\" + (index % 2 + 1),\n    control: /*#__PURE__*/React.createElement(Checkbox, {\n      checked: props.state.selected[{\n        index\n      }],\n      onChange: () => onUpdateItem({\n        index\n      }),\n      name: \"box\" + index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }\n    }),\n    label: data.Courses[index].name,\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }));\n  const checkbox2 = toMap2.map((checked, index) => /*#__PURE__*/React.createElement(FormControlLabel, {\n    className: \"box\" + (index % 2 + 1),\n    control: /*#__PURE__*/React.createElement(Checkbox, {\n      checked: props.state.selected[{\n        index\n      } + 8],\n      onChange: () => onUpdateItem({\n        index\n      } + 8),\n      name: \"box\" + index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }\n    }),\n    label: data.Courses[index + 8].name,\n    key: index + 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }));\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"boxSelectInput\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"boxes\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"boxHeader\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }, \"Business\"), /*#__PURE__*/React.createElement(FormGroup, {\n    className: \"boxesGroup\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }, checkbox1)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"boxes\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"boxHeader\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  }, \"Computer Science\"), /*#__PURE__*/React.createElement(FormGroup, {\n    className: \"boxesGroup\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  }, checkbox2)));\n}\n\nexport default Sem1List;","map":{"version":3,"sources":["C:/Atom/MyProjects/csb-module-app/src/Components/sem1List.js"],"names":["React","FormGroup","FormControlLabel","Checkbox","data","Sem1List","props","toMap1","state","selected","slice","toMap2","onUpdateItem","i","setState","list","map","item","j","checkbox1","checked","index","Courses","name","checkbox2"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport FormGroup from \"@material-ui/core/FormGroup\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\n\r\n\r\nimport \"./boxSelect.css\";\r\nimport data from '../Data/CourseData.json'\r\n\r\nfunction Sem1List(props) {\r\n\r\n\r\n  const toMap1 = props.state.selected.slice(0, 8);\r\n  const toMap2 = props.state.selected.slice(8, 15);\r\n\r\n   function onUpdateItem(i) {\r\n     props.setState(state => {\r\n      const list = state.list.map((item, j) => {\r\n        if (j == i) {\r\n          return !item;\r\n        } else {\r\n          return item;\r\n        }\r\n      });\r\n\r\n      return {\r\n        list,\r\n      };\r\n    });\r\n    // props.setState(\r\n    //   {\r\n    //     selected: props.state.selected.map(function(val, idx)\r\n    //     {\r\n    //       if (idx == i) {\r\n    //         if (val == true)return false\r\n    //         else return true\r\n    //       }\r\n    //       return val;\r\n    //     })\r\n    // });\r\n  };\r\n\r\n  const checkbox1 = toMap1.map((checked, index) => (\r\n      <FormControlLabel className={\"box\" + (index % 2 + 1)}\r\n      control={\r\n        <Checkbox\r\n          checked={props.state.selected[{index}]}\r\n          onChange={() => onUpdateItem({index})}\r\n          name={\"box\" + index} />\r\n      }\r\n      label= {data.Courses[index].name}\r\n      key={index}/>\r\n\r\n  ));\r\n\r\n  const checkbox2 = toMap2.map((checked, index) => (\r\n      <FormControlLabel className={\"box\" + (index % 2 + 1)}\r\n      control=\r\n      {\r\n        <Checkbox\r\n          checked={props.state.selected[{index}+8]}\r\n          onChange={() => onUpdateItem({index}+8)}\r\n          name={\"box\" + index} />\r\n      }\r\n      label= {data.Courses[index+ 8].name}\r\n      key={index + 8}/>\r\n\r\n  ));\r\n\r\n    return (\r\n      <div className=\"boxSelectInput\">\r\n      <div className=\"boxes\">\r\n        <h2 className=\"boxHeader\">Business</h2>\r\n        <FormGroup className=\"boxesGroup\">\r\n          {checkbox1}\r\n        </FormGroup>\r\n      </div>\r\n\r\n      <div className=\"boxes\">\r\n        <h2 className=\"boxHeader\">Computer Science</h2>\r\n        <FormGroup className=\"boxesGroup\">\r\n        {checkbox2}\r\n        </FormGroup>\r\n        </div>\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default Sem1List\r\n"]},"metadata":{},"sourceType":"module"}