{"version":3,"sources":["Components/Core/Header.js","Components/Core/Footer.js","Components/card.js","Components/cardList.js","Components/sem1List.js","Components/sem2List.js","Components/boxSelect.js","Components/userSelect.js","Components/Core/MainBody.js","App.js","serviceWorker.js","index.js"],"names":["Header","className","xmlns","viewBox","fill","d","Card","props","students","map","student","index","key","items","state","selected","ids","i","length","push","includes","id","module","CardList","cards","course","Courses","courseData","name","show","Sem1List","toMap1","slice","toMap2","onUpdateItem","event","persist","setState","item","target","checked","checkbox1","FormControlLabel","control","Checkbox","onChange","e","label","data","checkbox2","FormGroup","Sem2List","BoxSelect","React","useState","listVisibility","onShow","semester","Button","size","onClick","variant","color","UserSelect","value","setValue","FormControl","component","FormLabel","RadioGroup","row","aria-label","Radio","App","MainBody","Footer","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.63006b7a.chunk.js","sourcesContent":["import React from 'react'\r\nimport './core.css';\r\n\r\nfunction Header() {\r\n    return ( \r\n        <div className=\"header\">\r\n        <h1 className=\"header__text\">CSB Course Module Lookup</h1>\r\n        <section>\r\n            <svg className=\"wave\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 1440 320\">\r\n                <path className=\"wavePath\" fill=\"#fff\" d=\"M0,160L26.7,181.3C53.3,203,107,245,160,240C213.3,235,267,181,320,149.3C373.3,117,427,107,480,117.3C533.3,128,587,160,640,186.7C693.3,213,747,235,800,240C853.3,245,907,235,960,208C1013.3,181,1067,139,1120,149.3C1173.3,160,1227,224,1280,224C1333.3,224,1387,160,1413,128L1440,96L1440,320L1413.3,320C1386.7,320,1333,320,1280,320C1226.7,320,1173,320,1120,320C1066.7,320,1013,320,960,320C906.7,320,853,320,800,320C746.7,320,693,320,640,320C586.7,320,533,320,480,320C426.7,320,373,320,320,320C266.7,320,213,320,160,320C106.7,320,53,320,27,320L0,320Z\"></path>\r\n            </svg>\r\n        </section>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header","import React from 'react'\r\nimport './core.css';\r\n\r\nfunction Header() {\r\n    return ( \r\n        <div className=\"footer\">\r\n      <p>Â© Franklin Ume Obiekwe. All rights reserved.</p>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default Header","import React from \"react\";\r\nimport \"./card.css\";\r\n\r\nfunction Card(props) {\r\n\r\n  const students = props.students.map((student, index) => (\r\n    <li className=\"cardText\" key={index}>{student}</li>));\r\n\r\n\r\n  let items = [...props.state.selected];\r\n\r\n  let ids = [];\r\n\r\n  for (var i = 0; i < items.length - 1; i++) {\r\n    if (items[i] === true) ids.push(i);\r\n  }\r\n\r\n\r\n\r\nif (ids.includes(props.id -1)) {\r\n  return (<div className=\"card\">\r\n    <div className=\"cardImg\">\r\n      <div className=\"cardTitleContainer\">\r\n        <h2 className=\"cardTitle\">{props.module}</h2>\r\n      </div>\r\n    </div>\r\n    <div className=\"cardTextContainer\">\r\n      <h2 className=\"cardTextTitle\">Students</h2>\r\n      <ul className=\"textContainer\">{students}</ul>\r\n    </div>\r\n\r\n  </div>);\r\n} else {\r\n  return(\r\n    <div className=\"errCont\">\r\n    \r\n    </div>\r\n  )\r\n}\r\n\r\n}\r\n\r\nexport default Card;\r\n","import React from \"react\";\r\n\r\nimport \"./cardList.css\";\r\nimport Card from \"./card\";\r\n\r\nfunction CardList(props) {\r\n  const cards = props.course.Courses.map(courseData => (\r\n    <Card key={courseData.id} id={courseData.id}\r\n      module={courseData.name} students={courseData.students}\r\n      state={props.state} />\r\n  ));\r\n\r\n  if (props.show === true) {\r\n    return (\r\n      <div className=\"mainContainer\">\r\n        <h2 className=\"mainContainer__text\">Selected Modules</h2>\r\n        <div>\r\n          <ul className=\"cardsContainer\">{cards}</ul>\r\n        </div>\r\n      </div>\r\n    );\r\n  } else {\r\n  }\r\n  return <div />;\r\n}\r\n\r\nexport default CardList;\r\n","import React from 'react'\r\nimport FormGroup from \"@material-ui/core/FormGroup\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\n\r\n\r\nimport \"./boxSelect.css\";\r\nimport data from '../Data/CourseData.json'\r\n\r\nfunction Sem1List(props) {\r\n\r\n  const toMap1 = props.state.selected.slice(0, 8);\r\n  const toMap2 = props.state.selected.slice(8, 15);\r\n\r\n   function onUpdateItem(event, i) {\r\n     event.persist()\r\n     props.setState(state => {\r\n      const selected = state.selected.map((item, index) => {\r\n        if (index === i) {\r\n          return event.target.checked;\r\n        }\r\n        return item});\r\n      return {selected};\r\n    });\r\n  };\r\n\r\n  const checkbox1 = toMap1.map((checked, index) => (\r\n      <FormControlLabel className={\"box\" + (index % 2 + 1)}\r\n      control={\r\n        <Checkbox\r\n          checked={props.state.selected[index]}\r\n          onChange={(e) => {onUpdateItem(e, index)}}\r\n          name={\"box\" + index} />\r\n      }\r\n      label= {data.Courses[index].name}\r\n      key={index}/>\r\n\r\n  ));\r\n\r\n  const checkbox2 = toMap2.map((checked, index) => (\r\n      <FormControlLabel className={\"box\" + (index % 2 + 1)}\r\n      control={\r\n        <Checkbox\r\n          checked={props.state.selected[index+8]}\r\n          onChange={(e) => {onUpdateItem(e, index +8)}}\r\n          name={\"box\" + index} />\r\n      }\r\n      label= {data.Courses[index+ 8].name}\r\n      key={index + 8}/>\r\n\r\n  ));\r\n\r\n    return (\r\n      <div className=\"boxSelectInput\">\r\n      <div className=\"boxes\">\r\n        <h2 className=\"boxHeader\">Business</h2>\r\n        <FormGroup className=\"boxesGroup\">\r\n          {checkbox1}\r\n        </FormGroup>\r\n      </div>\r\n\r\n      <div className=\"boxes\">\r\n        <h2 className=\"boxHeader\">Computer Science</h2>\r\n        <FormGroup className=\"boxesGroup\">\r\n        {checkbox2}\r\n        </FormGroup>\r\n        </div>\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default Sem1List\r\n","import React from 'react'\r\nimport FormGroup from \"@material-ui/core/FormGroup\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\n\r\n\r\nimport \"./boxSelect.css\";\r\nimport data from '../Data/CourseData.json'\r\n\r\nfunction Sem2List(props) {\r\n\r\n  const toMap1 = props.state.selected.slice(15, 23);\r\n  const toMap2 = props.state.selected.slice(23, 28);\r\n\r\n  function onUpdateItem(event, i) {\r\n    event.persist()\r\n    props.setState(state => {\r\n     const selected = state.selected.map((item, index) => {\r\n       if (index === i) {\r\n         return event.target.checked;\r\n       }\r\n       return item});\r\n     return {selected};\r\n   });\r\n };\r\n\r\n  const checkbox1 = toMap1.map((checked, index) => (\r\n      <FormControlLabel className={\"box\" + (index % 2 + 1)}\r\n      control={\r\n        <Checkbox\r\n          checked={props.state.selected[index+ 15]}\r\n          onChange={(e) => {onUpdateItem(e, index+15)}}\r\n          name={\"box\" + index} />\r\n      }\r\n      label= {data.Courses[index+ 15].name}\r\n      key={index + 15}/>\r\n\r\n  ));\r\n\r\n  const checkbox2 = toMap2.map((checked, index) => (\r\n      <FormControlLabel className={\"box\" + (index % 2 + 1)}\r\n      control=\r\n      {\r\n        <Checkbox\r\n          checked={props.state.selected[index+23]}\r\n          onChange={(e) => {onUpdateItem(e, index+23)}}\r\n          name={\"box\" + index} />\r\n      }\r\n      label= {data.Courses[index+ 23].name}\r\n      key={index + 23}/>\r\n\r\n  ));\r\n\r\n    return (\r\n      <div className=\"boxSelectInput\">\r\n      <div className=\"boxes\">\r\n        <h2 className=\"boxHeader\">Business</h2>\r\n        <FormGroup className=\"boxesGroup\">\r\n          {checkbox1}\r\n        </FormGroup>\r\n      </div>\r\n\r\n      <div className=\"boxes\">\r\n        <h2 className=\"boxHeader\">Computer Science</h2>\r\n        <FormGroup className=\"boxesGroup\">\r\n        {checkbox2}\r\n        </FormGroup>\r\n        </div>\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default Sem2List\r\n","import React from \"react\";\r\n\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport \"./boxSelect.css\";\r\nimport data from '../Data/CourseData.json'\r\n\r\nimport CardList from './cardList'\r\nimport Sem1List from './sem1List'\r\nimport Sem2List from './sem2List'\r\n\r\n\r\n\r\nfunction BoxSelect(props) {\r\n\r\n  //--------------------------------------------------\r\n  //State\r\n  const [state, setState] = React.useState(\r\n    {\r\n      selected: \r\n      [false, false, false, false, false, false, false, false, false, false,\r\n        false, false, false, false, false, false, false, false, false, false,\r\n        false, false, false, false, false, false, false, false, false ],\r\n      listVisibility:false\r\n    }\r\n  );\r\n\r\n\r\n//--------------------------------------------------\r\n//Functions\r\n\r\n  const onShow = event => {\r\n    setState({...state, listVisibility: true});\r\n  }\r\n\r\n\r\n\r\n//--------------------------------------------------\r\n//Semester 1 Checkboxes\r\n\r\n  if (props.semester === \"1\")\r\n  {\r\n    return (\r\n      <div className=\"boxSelect\">\r\n\r\n        <Sem1List state={state} setState={setState}/>\r\n\r\n        <div className=\"buttonContainer\">\r\n          <Button className=\"button\" size=\"large\" onClick={onShow} variant=\"contained\" color=\"secondary\">\r\n            Submit\r\n          </Button>\r\n        </div>\r\n\r\n        <CardList show={state.listVisibility} course={data} state={state}/>\r\n\r\n      </div>\r\n    );\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n  //--------------------------------------------------\r\n  //Semester 2 Checkboxes\r\n\r\n  else {\r\n    return(\r\n      <div className=\"boxSelect\">\r\n        <Sem2List state={state} setState={setState}/>\r\n\r\n        <div className=\"buttonContainer\">\r\n          <Button className=\"button\" size=\"large\" onClick={onShow} variant=\"contained\" color=\"secondary\">\r\n            Submit\r\n          </Button>\r\n        </div>\r\n\r\n        <CardList show={state.listVisibility} course={data} state={state}/>\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\n\r\nexport default BoxSelect;\r\n","import React, { useState } from 'react';\r\n\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport BoxSelect from './boxSelect'\r\n\r\n\r\nimport \"./userSelect.css\";\r\n\r\nfunction UserSelect(props) {\r\n  const [value, setValue] = useState('1');\r\n  const handleChange = (event) =>\r\n  {\r\n    setValue(event.target.value);\r\n  };\r\n  return (\r\n    <div className=\"userSelect\">\r\n      <FormControl component=\"fieldset\">\r\n        \r\n        <FormLabel component=\"legend\">Select a Semester to check</FormLabel>\r\n        <RadioGroup className=\"radioButtonGroup\" row aria-label=\"Semester\" name=\"Semester\" value={value} onChange={handleChange}>\r\n          <FormControlLabel className=\"radioButton\" value=\"1\" control={<Radio/>} label=\"Semester 1\" />\r\n          <FormControlLabel className=\"radioButton\" value=\"2\" control={<Radio/>} label=\"Semester 2\" />\r\n        </RadioGroup>\r\n\r\n      </FormControl>\r\n\r\n      <h3>Select the modules you would like to search below</h3>\r\n      <BoxSelect semester = {value}/>\r\n    </div>\r\n\r\n  );\r\n}\r\n\r\nexport default UserSelect;\r\n","import React from 'react'\r\nimport './core.css';\r\n\r\nimport UserSelect from '../userSelect'\r\n\r\nfunction Header() {\r\n    return ( \r\n      <div className=\"moduleChooser\">\r\n        <UserSelect/>\r\n        <section>\r\n          <svg className=\"wave2\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 1440 320\">\r\n            <path fill=\"#fff\" d=\"M0,32L60,69.3C120,107,240,181,360,181.3C480,181,600,107,720,90.7C840,75,960,117,1080,144C1200,171,1320,181,1380,186.7L1440,192L1440,0L1380,0C1320,0,1200,0,1080,0C960,0,840,0,720,0C600,0,480,0,360,0C240,0,120,0,60,0L0,0Z\"></path>\r\n          </svg>\r\n        </section>\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default Header","import React from 'react';\r\nimport './App.css';\r\n\r\nimport Header from './Components/Core/Header'\r\nimport Footer from './Components//Core/Footer'\r\nimport MainBody from './Components//Core/MainBody'\r\n\r\nfunction App() {\r\n  return (\r\n\r\n  <div className=\"App\">\r\n    <Header/>\r\n    <MainBody/>\r\n    <Footer/>\r\n  </div>\r\n  \r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}